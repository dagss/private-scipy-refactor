import os

try:
    import numpy
except ImportError:
    raise ValueError("You should install numpy before building scipy")

from numpy.distutils.misc_util import get_numpy_include_dirs
from bento.commands.hooks \
    import \
        post_configure, recurse, pre_build, post_build
from bento.installed_package_description \
    import \
        InstalledSection
from yaku.conftests.fconftests \
    import \
        check_fortran_verbose_flag, check_fortran_runtime_flags

#@recurse(["scipy/special/bscript", "scipy/linalg/bscript"])
@recurse(["scipy/linalg/bscript"])
@post_configure
def myconfigure(ctx):
    cfg = ctx.yaku_configure_ctx

    cfg.use_tools(["ctasks", "pyext", "fortran", "tpl_tasks"])
    cfg.use_tools(["numpy_c_template"], ["."])
    cfg.use_tools(["f2py_tool"], ["."])

    # cfg.env["PYEXT_CPPPATH"].append("scipy/fftpack/src")
    cfg.env["PYEXT_CPPPATH"].extend(get_numpy_include_dirs())

    # cfg.env["PYEXT_LIBDIR"].append("scipy/fftpack")
    #cfg.env["PYEXT_LIBDIR"].append("/usr/lib/atlas")
    # #cfg.env["PYEXT_LIBS"].extend(["fftpack", "dfftpack"])
    #cfg.env["PYEXT_LIBS"].extend(["lapack", "blas"])

    cfg.env["SUBST_DICT"] = {"SHORT_VERSION": "'0.8.0'",
                             "VERSION": "'0.8.0'",
                             "RELEASE": "False"}
    cfg.env["VERBOSE"] = True

    check_fortran_verbose_flag(cfg)
    check_fortran_runtime_flags(cfg)
@post_build
def mybuild(ctx):
    # Produce generated files
    templater = ctx.yaku_build_ctx.builders["tpl_tasks"]
    tasks = templater.build("version", ["scipy/version.py.in"])
    tasks += templater.build("__config__", ["scipy/__config__.py.in"])
    #bld = ctx.yaku_build_ctx
    #bld.tasks += tasks

    section_writer = ctx.cmd.section_writer
    section = InstalledSection(
                  "gen_pythonfiles",
                  "library",
                  os.path.join("$_srcrootdir",
                               ctx.yaku_build_ctx.env["BLDDIR"]),
                  "$sitedir",
                  [os.path.join("scipy", "version.py"),
                   os.path.join("scipy", "__config__.py")])
    section_writer.sections["pythonfiles"]["gen_files"] = section
